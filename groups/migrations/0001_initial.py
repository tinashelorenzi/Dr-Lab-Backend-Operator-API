# Generated by Django 5.2.5 on 2025-08-11 17:24

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Group name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Group description')),
                ('group_type', models.CharField(choices=[('PUBLIC', 'Public Group'), ('PRIVATE', 'Private Group'), ('SYSTEM', 'System Group')], default='PRIVATE', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('max_members', models.PositiveIntegerField(default=50, help_text='Maximum number of members allowed')),
                ('allow_member_invite', models.BooleanField(default=False, help_text='Allow members to invite others')),
                ('private_key', models.TextField(blank=True, help_text='RSA Private Key (PEM format) for group encryption', null=True)),
                ('public_key', models.TextField(blank=True, help_text='RSA Public Key (PEM format) for group encryption', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('admins', models.ManyToManyField(help_text='Users who can manage this group', related_name='admin_groups', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(help_text='User who created this group', on_delete=django.db.models.deletion.PROTECT, related_name='created_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
                'db_table': 'groups',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('ADMIN', 'Administrator'), ('MODERATOR', 'Moderator'), ('MEMBER', 'Member')], default='MEMBER', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('is_muted', models.BooleanField(default=False)),
                ('added_by', models.ForeignKey(blank=True, help_text='User who added this member', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invited_memberships', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Group Membership',
                'verbose_name_plural': 'Group Memberships',
                'db_table': 'group_memberships',
                'ordering': ['-joined_at'],
                'unique_together': {('group', 'user')},
            },
        ),
        migrations.AddField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(help_text='Users who are members of this group', related_name='user_groups', through='groups.GroupMembership', through_fields=('group', 'user'), to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='GroupInvitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('DECLINED', 'Declined'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('message', models.TextField(blank=True, help_text='Optional invitation message')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(help_text='Invitation expiry date')),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='groups.group')),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_group_invitations', to=settings.AUTH_USER_MODEL)),
                ('invited_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_invitations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Group Invitation',
                'verbose_name_plural': 'Group Invitations',
                'db_table': 'group_invitations',
                'ordering': ['-created_at'],
                'unique_together': {('group', 'invited_user')},
            },
        ),
    ]
