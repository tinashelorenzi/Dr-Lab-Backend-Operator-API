# Generated by Django 5.2.5 on 2025-08-17 13:23

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Client company name', max_length=255)),
                ('contact_person', models.CharField(blank=True, help_text='Primary contact person', max_length=255)),
                ('email', models.EmailField(help_text='Primary contact email', max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('client_type', models.CharField(choices=[('CONTRACTED', 'Contracted Client'), ('ONE_TIME', 'One-time Client'), ('LONG_TERM', 'Long-term Client')], default='ONE_TIME', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('default_sla_hours', models.PositiveIntegerField(default=72, help_text='Default Service Level Agreement in hours')),
                ('billing_contact', models.CharField(blank=True, max_length=255)),
                ('billing_email', models.EmailField(blank=True, max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_clients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'db_table': 'clients',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Project name', max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('ON_HOLD', 'On Hold'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='samples.client')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'db_table': 'projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SampleBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('batch_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('testing_department', models.CharField(choices=[('CHEMISTRY', 'Chemistry'), ('MICROBIOLOGY', 'Microbiology'), ('METALS', 'Metals')], help_text='Client decides: micro or chem (or metals)', max_length=20)),
                ('sla_hours', models.PositiveIntegerField(help_text='Service Level Agreement in hours')),
                ('due_date', models.DateTimeField(help_text='When batch is due based on SLA')),
                ('status', models.CharField(choices=[('RECEIVED', 'Received'), ('IN_PROGRESS', 'In Progress'), ('TESTING', 'Testing'), ('REVIEW', 'Under Review'), ('COMPLETED', 'Completed'), ('DELIVERED', 'Delivered')], default='RECEIVED', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='samples.client')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_batches', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='samples.project')),
            ],
            options={
                'verbose_name': 'Sample Batch',
                'verbose_name_plural': 'Sample Batches',
                'db_table': 'sample_batches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sample_id', models.CharField(editable=False, max_length=50, unique=True)),
                ('barcode', models.CharField(editable=False, max_length=100, unique=True)),
                ('volume_ml', models.DecimalField(decimal_places=2, help_text='Sample volume in ml (minimum 1000ml required)', max_digits=10)),
                ('sample_type', models.CharField(help_text='Type of sample (e.g., water, soil, blood, etc.)', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Additional sample description')),
                ('temperature_on_receipt', models.CharField(blank=True, max_length=50)),
                ('condition_notes', models.TextField(blank=True, help_text='Record sample conditions on arrival')),
                ('storage_requirement', models.CharField(choices=[('FROZEN', 'Frozen (Recommended)'), ('REFRIGERATED', 'Refrigerated'), ('ROOM_TEMP', 'Room Temperature'), ('SPECIAL', 'Special Storage')], default='FROZEN', max_length=50)),
                ('assigned_department', models.CharField(choices=[('CHEMISTRY', 'Chemistry'), ('MICROBIOLOGY', 'Microbiology'), ('METALS', 'Metals')], max_length=20)),
                ('status', models.CharField(choices=[('RECEIVED', 'Received'), ('REGISTERED', 'Registered'), ('QUEUED', 'Queued for Testing'), ('TESTING', 'Under Testing'), ('VERIFICATION', 'Verification in Progress'), ('COMPLETED', 'Testing Completed'), ('DISCARDED', 'Discarded')], default='RECEIVED', max_length=20)),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('testing_started_at', models.DateTimeField(blank=True, null=True)),
                ('testing_completed_at', models.DateTimeField(blank=True, null=True)),
                ('discard_date', models.DateTimeField(blank=True, help_text='Samples discarded after 2 weeks', null=True)),
                ('requires_verification', models.BooleanField(default=True, help_text='Verification should be possible in between')),
                ('verification_completed', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='samples.client')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='samples.project')),
                ('received_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_samples', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_samples', to=settings.AUTH_USER_MODEL)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='samples.samplebatch')),
            ],
            options={
                'verbose_name': 'Sample',
                'verbose_name_plural': 'Samples',
                'db_table': 'samples',
                'ordering': ['-received_at'],
            },
        ),
        migrations.CreateModel(
            name='SampleWorksheet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('worksheet_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('department', models.CharField(choices=[('CHEMISTRY', 'Chemistry'), ('MICROBIOLOGY', 'Microbiology'), ('METALS', 'Metals')], max_length=20)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('ACTIVE', 'Active'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('REVIEWED', 'Reviewed')], default='DRAFT', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_technicians', models.ManyToManyField(blank=True, help_text='Units can fill-in the same worksheet', related_name='assigned_worksheets', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_worksheets', to=settings.AUTH_USER_MODEL)),
                ('samples', models.ManyToManyField(related_name='worksheets', to='samples.sample')),
            ],
            options={
                'verbose_name': 'Sample Worksheet',
                'verbose_name_plural': 'Sample Worksheets',
                'db_table': 'sample_worksheets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='sample',
            index=models.Index(fields=['sample_id'], name='samples_sample__9e31c7_idx'),
        ),
        migrations.AddIndex(
            model_name='sample',
            index=models.Index(fields=['barcode'], name='samples_barcode_8d8d6b_idx'),
        ),
        migrations.AddIndex(
            model_name='sample',
            index=models.Index(fields=['status'], name='samples_status_cce5be_idx'),
        ),
        migrations.AddIndex(
            model_name='sample',
            index=models.Index(fields=['assigned_department'], name='samples_assigne_615419_idx'),
        ),
    ]
